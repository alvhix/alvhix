---
import { type CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import CardArticle from '@components/layout/body/CardArticle.astro';
import SalesforceIcon from '@components/common/SalesforceIcon.vue';
import PostTile from '@components/common/PostTile.vue';
import BaseLayout from '@layout/BaseLayout.astro';
import { IconSize, IconType } from '@/scripts/types';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <div
    class="slds-col slds-size_1-of-1 slds-medium-size_8-of-12 slds-large-size_6-of-12"
  >
    <CardArticle
      title={post.data.title}
      description={post.data.description}
      commentsEnabled={true}
    >
      <span
        slot="icon"
        class="slds-icon_container slds-icon-standard-post"
        title="home"
      >
        <SalesforceIcon
          icon="post"
          type={IconType.STANDARD}
          size={IconSize.SMALL}
        />
      </span>
      <section slot="body">
        {
          post.data.heroImage && (
            <a href={post.data.heroImage} target="_blank">
              <img
                class="slds-align_absolute-center slds-m-bottom_large hero-image"
                src={post.data.heroImage}
                alt="Blog post hero image"
                width="100%"
                height="100%"
              />
            </a>
          )
        }
        <PostTile
          pubDate={post.data.pubDate}
          updatedDate={post.data.updatedDate}
          tags={post.data.tags}
        />
        <hr />
        <div class="blog-content">
          <Content />
        </div>
      </section>
    </CardArticle>
  </div>
</BaseLayout>

<style is:inline>
  div.blog-content {
    padding: 0.5rem 1rem;

    & p,
    & h1,
    & h2,
    & h3,
    & h4,
    & h5,
    & h6,
    & table,
    & pre,
    & code,
    & b,
    & strong,
    & blockquote,
    & ul,
    & ol {
      all: revert;
    }

    & blockquote {
      padding: 0.25rem;
      border-left: 2px solid #1b96ff;
      padding-left: 15px;
      background-color: rgba(228, 228, 228, 0.5);
      border-radius: 2px;
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }

    & body {
      font-family: sans-serif;
    }

    & h1 {
      font-size: 2em;
    }

    & h2 {
      font-size: 1.5em;
    }

    & h3 {
      font-size: 1.17em;
    }

    & h4 {
      font-size: 1em;
    }

    & h5 {
      font-size: 0.83em;
    }

    & h6 {
      font-size: 0.67em;
    }

    & h1,
    & h2,
    & h3,
    & h4,
    & h5,
    & h6 {
      font-weight: 300;
      line-height: 1.5;
    }

    & pre {
      padding: 0.8em 1.15em;
      border-radius: 5px;
    }

    & table,
    th,
    td {
      border: 1px solid;
      border-collapse: collapse;
    }

    & th,
    & td {
      padding: 0.25rem;
    }

    & a {
      text-decoration: none;
    }
  }

  img.hero-image {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(0, 0, 0, 0.1);
    transition:
      box-shadow 0.3s ease,
      transform 0.3s ease,
      border 0.3s ease;
  }

  img.hero-image:hover {
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
    transform: translateY(-4px);
    border: 1px solid rgba(0, 0, 0, 0.2);
    transition-delay: 0.1s;
  }
</style>
